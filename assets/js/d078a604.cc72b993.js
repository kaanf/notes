"use strict";(self.webpackChunkdocu_tutorial=self.webpackChunkdocu_tutorial||[]).push([[4],{3905:function(e,t,a){a.d(t,{Zo:function(){return g},kt:function(){return d}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},g=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),p=c(a),d=n,m=p["".concat(s,".").concat(d)]||p[d]||h[d]||i;return a?r.createElement(m,o(o({ref:t},g),{},{components:a})):r.createElement(m,o({ref:t},g))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},6992:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return g},default:function(){return p}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),o=["components"],l={sidebar_label:"\ud83d\ude80 git cheat sheet",sidebar_position:1},s="git cheat sheet",c={unversionedId:"git",id:"git",isDocsHomePage:!1,title:"git cheat sheet",description:"Staging area",source:"@site/notes/git.md",sourceDirName:".",slug:"/git",permalink:"/notes/git",editUrl:"https://github.com/kaanf/personal-notes/edit/main/website/notes/git.md",tags:[],version:"current",lastUpdatedBy:"kaanf",lastUpdatedAt:1633651110,formattedLastUpdatedAt:"10/8/2021",sidebarPosition:1,frontMatter:{sidebar_label:"\ud83d\ude80 git cheat sheet",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"notes",permalink:"/notes/README"},next:{title:"\u26a1\ufe0f portfolio",permalink:"/notes/portfolio"}},g=[{value:"Staging area",id:"staging-area",children:[{value:"Unstage the change",id:"unstage-the-change",children:[]},{value:"Restore file from repository",id:"restore-file-from-repository",children:[]},{value:"Remove file",id:"remove-file",children:[]},{value:"Move file",id:"move-file",children:[]},{value:"Add changes in the working directory to the staging area",id:"add-changes-in-the-working-directory-to-the-staging-area",children:[]}]},{value:".gitignore",id:"gitignore",children:[{value:"Ignore all files that match this pattern",id:"ignore-all-files-that-match-this-pattern",children:[]},{value:"Ignore all files that aren&#39;t in the top-level directory",id:"ignore-all-files-that-arent-in-the-top-level-directory",children:[]},{value:"Despite any higher-level rules, don&#39;t ignore any files",id:"despite-any-higher-level-rules-dont-ignore-any-files",children:[]},{value:"Looking at the global .gitignore",id:"looking-at-the-global-gitignore",children:[]},{value:"Create global .gitignore",id:"create-global-gitignore",children:[]},{value:"Set global .gitignore",id:"set-global-gitignore",children:[]},{value:"Sample .gitignore files",id:"sample-gitignore-files",children:[]}]},{value:"Log &amp; history",id:"log--history",children:[{value:"Limiting results",id:"limiting-results",children:[]},{value:"Compact view of the repository history",id:"compact-view-of-the-repository-history",children:[]},{value:"Graphical view of the repository",id:"graphical-view-of-the-repository",children:[]},{value:"Compact graphical view of the repository",id:"compact-graphical-view-of-the-repository",children:[]},{value:"Viewing non-ancestral history",id:"viewing-non-ancestral-history",children:[]},{value:"Summary of the commits",id:"summary-of-the-commits",children:[]},{value:"Searching git history",id:"searching-git-history",children:[]}]},{value:"Branching",id:"branching",children:[{value:"Create new branch",id:"create-new-branch",children:[]},{value:"Checking current branch",id:"checking-current-branch",children:[]},{value:"Switching to another branch",id:"switching-to-another-branch",children:[]},{value:"Delete branch",id:"delete-branch",children:[]}]},{value:"Merging",id:"merging",children:[{value:"Fast forward merge commit",id:"fast-forward-merge-commit",children:[]},{value:"Commits that are not in main branch",id:"commits-that-are-not-in-main-branch",children:[]}]},{value:"Remote repository",id:"remote-repository",children:[{value:"Change workstation branch (master -&gt; main)",id:"change-workstation-branch-master---main",children:[]}]},{value:"Basics",id:"basics",children:[{value:"Set up a Git repository",id:"set-up-a-git-repository",children:[]},{value:"Add a remote repository to local",id:"add-a-remote-repository-to-local",children:[]}]}],h={toc:g};function p(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"git-cheat-sheet"},"git cheat sheet"),(0,i.kt)("h2",{id:"staging-area"},"Staging area"),(0,i.kt)("h3",{id:"unstage-the-change"},"Unstage the change"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git reset HEAD <source>\n")),(0,i.kt)("h3",{id:"restore-file-from-repository"},"Restore file from repository"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout HEAD <source>\n")),(0,i.kt)("h3",{id:"remove-file"},"Remove file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git rm <source>\n")),(0,i.kt)("h3",{id:"move-file"},"Move file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git mv <source> <destination> \n")),(0,i.kt)("h3",{id:"add-changes-in-the-working-directory-to-the-staging-area"},"Add changes in the working directory to the staging area"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git add .\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"staging area")," lets you construct your next commit in a logical, structure fashion.")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Moving files around and deleting them from the filesystem, without notifying Git, will cause you grief.")),(0,i.kt)("h2",{id:"gitignore"},".gitignore"),(0,i.kt)("h3",{id:"ignore-all-files-that-match-this-pattern"},"Ignore all files that match this pattern"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"*.<pattern-name>\n")),(0,i.kt)("h3",{id:"ignore-all-files-that-arent-in-the-top-level-directory"},"Ignore all files that aren't in the top-level directory"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"*/*.<pattern-name>\n")),(0,i.kt)("h3",{id:"despite-any-higher-level-rules-dont-ignore-any-files"},"Despite any higher-level rules, don't ignore any files"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"!/*.<pattern-name>\n")),(0,i.kt)("h3",{id:"looking-at-the-global-gitignore"},"Looking at the global .gitignore"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git config --global core.excludesfile\n")),(0,i.kt)("h3",{id:"create-global-gitignore"},"Create global .gitignore"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"touch ~/.gitignore_global\n")),(0,i.kt)("h3",{id:"set-global-gitignore"},"Set global .gitignore"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git config --global core.excludesfile ~/.gitignore_global\n")),(0,i.kt)("h3",{id:"sample-gitignore-files"},"Sample .gitignore files"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"https://github.com/github/gitignore")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},".gitignore")," lets you configure Git so that it ignores specific files or files that match a certain pattern.")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("inlineCode",{parentName:"p"},"!")," negates a matching rule.")),(0,i.kt)("h2",{id:"log--history"},"Log & history"),(0,i.kt)("h3",{id:"limiting-results"},"Limiting results"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git log -<number>\n")),(0,i.kt)("h3",{id:"compact-view-of-the-repository-history"},"Compact view of the repository history"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git log --oneline\n")),(0,i.kt)("h3",{id:"graphical-view-of-the-repository"},"Graphical view of the repository"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git log --graph\n")),(0,i.kt)("h3",{id:"compact-graphical-view-of-the-repository"},"Compact graphical view of the repository"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git log --graph --oneline\n")),(0,i.kt)("h3",{id:"viewing-non-ancestral-history"},"Viewing non-ancestral history"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git log --oneline --graph --all\n")),(0,i.kt)("h3",{id:"summary-of-the-commits"},"Summary of the commits"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git shortlog\n")),(0,i.kt)("h3",{id:"searching-git-history"},"Searching git history"),(0,i.kt)("h4",{id:"names"},"Names"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Name that consists of one part;")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git log --author=kaanf --oneline\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Name that consists of two or more parts;")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'git log --author="Kaan F\u0131rat" --oneline\n')),(0,i.kt)("h4",{id:"words"},"Words"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git log --grep=<word> --oneline\n")),(0,i.kt)("h4",{id:"single-file"},"Single file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git log --oneline <source>\n")),(0,i.kt)("h4",{id:"directory"},"Directory"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git log --oneline <directory>\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This shows you all the changes that happened in that directory, but it\u2019s not clear which files were changed.")),(0,i.kt)("h4",{id:"detailed-information"},"Detailed information"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git log --oneline --stat <directory>\n")),(0,i.kt)("h4",{id:"commits-that-deal-with-the-term"},"Commits that deal with the term"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'git log-S"<term>"\n')),(0,i.kt)("h4",{id:"commits-that-deal-with-the-term---detailed"},"Commits that deal with the term - (detailed)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'git log-S"<term>" -p\n')),(0,i.kt)("h4",{id:"commits-on-other-branches"},"Commits on other branches"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'git log --all -S"<term>"\n')),(0,i.kt)("h2",{id:"branching"},"Branching"),(0,i.kt)("h3",{id:"create-new-branch"},"Create new branch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git branch <branch-name>\n")),(0,i.kt)("h3",{id:"checking-current-branch"},"Checking current branch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git branch\n")),(0,i.kt)("h3",{id:"switching-to-another-branch"},"Switching to another branch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout <branch-name>\n")),(0,i.kt)("h3",{id:"delete-branch"},"Delete branch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git branch -d <branch-name>\n")),(0,i.kt)("h2",{id:"merging"},"Merging"),(0,i.kt)("h3",{id:"fast-forward-merge-commit"},"Fast forward merge commit"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git merge <branch-name> --no-ff\n")),(0,i.kt)("h3",{id:"commits-that-are-not-in-main-branch"},"Commits that are not in main branch"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git log <branch-name> --not <main-branch>\n")),(0,i.kt)("h2",{id:"remote-repository"},"Remote repository"),(0,i.kt)("h3",{id:"change-workstation-branch-master---main"},"Change workstation branch (master -> main)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git branch -M main\ngit push -u origin main\n")),(0,i.kt)("h2",{id:"basics"},"Basics"),(0,i.kt)("h3",{id:"set-up-a-git-repository"},"Set up a Git repository"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git init\n")),(0,i.kt)("h3",{id:"add-a-remote-repository-to-local"},"Add a remote repository to local"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git remote add origin <remote-url>\n")))}p.isMDXComponent=!0}}]);